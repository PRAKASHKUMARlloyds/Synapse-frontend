[
  {
    "id": 1,
    "question": "What is React?",
    "answer": "React is a JavaScript library for building user interfaces, maintained by Facebook.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 2,
    "question": "What are components in React?",
    "answer": "Components are the building blocks of a React application, which return a portion of UI.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 3,
    "question": "What is JSX?",
    "answer": "JSX stands for JavaScript XML and allows writing HTML in React using JavaScript.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 4,
    "question": "How do you create a functional component in React?",
    "answer": "By creating a function that returns JSX. Example: const MyComponent = () => <div>Hello</div>;",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 5,
    "question": "What is the use of props in React?",
    "answer": "Props are used to pass data from one component to another.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 6,
    "question": "What is state in React?",
    "answer": "State is a built-in object that stores property values that belong to the component.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 7,
    "question": "How do you update state in a React component?",
    "answer": "By using the setState() method or useState hook in functional components.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 8,
    "question": "What is the virtual DOM?",
    "answer": "Virtual DOM is a lightweight copy of the real DOM that React uses to optimize rendering.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 9,
    "question": "How do you apply styles in React?",
    "answer": "Styles can be applied using inline styles, CSS files, or styled-components.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 10,
    "question": "What is the purpose of keys in React lists?",
    "answer": "Keys help React identify which items have changed, are added, or are removed.",
    "category": "react",
    "difficulty": "Beginner"
  },
  {
    "id": 11,
    "question": "What are React hooks?",
    "answer": "Hooks are functions that let you use state and lifecycle features in functional components.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 12,
    "question": "What is useEffect used for?",
    "answer": "useEffect lets you perform side effects in function components.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 13,
    "question": "How do you lift state up in React?",
    "answer": "By moving state to a common ancestor and passing it down via props.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 14,
    "question": "What is context API in React?",
    "answer": "It is a way to share values like state across components without passing props manually.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 15,
    "question": "What are controlled components in React?",
    "answer": "Components where form data is handled by the component’s state.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 16,
    "question": "How do you handle forms in React?",
    "answer": "Using controlled components and updating state on input change.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 17,
    "question": "What is the difference between useEffect and useLayoutEffect?",
    "answer": "useLayoutEffect runs synchronously after all DOM mutations, useEffect runs asynchronously after rendering.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 18,
    "question": "What is prop drilling?",
    "answer": "Passing data through many nested components that do not need the data.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 19,
    "question": "What is the useRef hook?",
    "answer": "It provides a way to access and persist values without triggering re-renders.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 20,
    "question": "What is memoization in React?",
    "answer": "It is a technique to optimize performance by caching the result of a function call.",
    "category": "react",
    "difficulty": "Intermediate"
  },
  {
    "id": 21,
    "question": "How does React reconcile differences in virtual DOM?",
    "answer": "React uses a diffing algorithm to identify changes and update only the changed parts.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 22,
    "question": "What are higher-order components?",
    "answer": "Functions that take a component and return a new component with added functionality.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 23,
    "question": "What is lazy loading in React?",
    "answer": "It’s the technique of loading components only when they are needed, using React.lazy.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 24,
    "question": "What is server-side rendering (SSR) in React?",
    "answer": "Rendering components on the server and sending the HTML to the client for faster loading.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 25,
    "question": "What are React Portals?",
    "answer": "Portals provide a way to render children into a DOM node outside the parent component.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 26,
    "question": "What is Concurrent Mode in React?",
    "answer": "A set of features that help React apps stay responsive by interrupting rendering.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 27,
    "question": "How can you prevent re-renders in React?",
    "answer": "By using React.memo, useMemo, and shouldComponentUpdate.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 28,
    "question": "What is the difference between Redux and Context API?",
    "answer": "Redux offers more structured and scalable state management compared to Context, which is simpler but less powerful.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 29,
    "question": "What is a render prop?",
    "answer": "A technique where a component uses a function prop to determine what to render.",
    "category": "react",
    "difficulty": "Advanced"
  },
  {
    "id": 30,
    "question": "What is hydration in React?",
    "answer": "Hydration is the process of attaching event listeners to HTML generated on the server.",
    "category": "react",
    "difficulty": "Advanced"
  }
]
