{
  "js": [
    {
      "id": 1,
      "question": "What is JavaScript?",
      "expected_answer": "JavaScript is a programming language used to create interactive and dynamic web content.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 2,
      "question": "What are variables and how do you declare them?",
      "expected_answer": "Variables are containers for data, declared using var, let, or const.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 3,
      "question": "What are data types in JavaScript?",
      "expected_answer": "JavaScript supports types like string, number, boolean, undefined, null, symbol, and object.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 4,
      "question": "What is the difference between let, var, and const?",
      "expected_answer": "var is function-scoped, 'let' and 'const' are block-scoped; 'const' cannot be reassigned.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 5,
      "question": "How do you write a function in JavaScript?",
      "expected_answer": "Use function declarations or arrow syntax to define reusable code blocks.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 6,
      "question": "What is an array?",
      "expected_answer": "An array is a special type of object used to store multiple values in a single variable.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 7,
      "question": "How do you use loops in JavaScript?",
      "expected_answer": "Use for, while, or do-while loops to execute code repeatedly based on conditions.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 8,
      "question": "What is an object?",
      "expected_answer": "An object is a collection of key-value pairs used to store complex data.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 9,
      "question": "What are conditional statements?",
      "expected_answer": "Conditional statements control decision-making using if, else if, else, and switch.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 10,
      "question": "How do you handle user input in JavaScript?",
      "expected_answer": "Use prompt(), form elements, or event listeners to capture input.",
      "category": "js",
      "difficulty": "Beginner"
    },
    {
      "id": 11,
      "question": "What is the DOM and how does JavaScript interact with it?",
      "expected_answer": "The DOM represents the page structure; JavaScript modifies it using built-in APIs.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 12,
      "question": "What are arrow functions?",
      "expected_answer": "Arrow functions are concise syntax for functions that do not bind their own 'this'.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 13,
      "question": "What are callbacks?",
      "expected_answer": "A callback is a function passed into another function to be executed later.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 14,
      "question": "What is event bubbling?",
      "expected_answer": "Event bubbling is the propagation of events from inner to outer DOM elements.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 15,
      "question": "What are closures?",
      "expected_answer": "Closures are functions that retain access to their lexical scope even outside it.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 16,
      "question": "What is hoisting in JavaScript?",
      "expected_answer": "Hoisting moves declarations to the top of their scope during compilation.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 17,
      "question": "What is the 'this' keyword?",
      "expected_answer": "The 'this' keyword refers to the object the function is called on, context-dependent.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 18,
      "question": "How do you handle errors in JavaScript?",
      "expected_answer": "Use try...catch blocks and the Error object to manage exceptions.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 19,
      "question": "What are promises?",
      "expected_answer": "Promises represent asynchronous operations that can succeed or fail.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 20,
      "question": "What is async/await?",
      "expected_answer": "Async/await is syntax for working with promises more cleanly and synchronously.",
      "category": "js",
      "difficulty": "Intermediate"
    },
    {
      "id": 21,
      "question": "What is a prototype in JavaScript?",
      "expected_answer": "A prototype is an object from which other objects inherit properties and methods.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 22,
      "question": "How does the JavaScript event loop work?",
      "expected_answer": "The event loop checks the call stack and task queue to handle asynchronous operations.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 23,
      "question": "What is a generator function?",
      "expected_answer": "Generators are functions that can pause and resume using the 'yield' keyword.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 24,
      "question": "What are modules in JavaScript?",
      "expected_answer": "Modules allow code encapsulation using export/import for reuse and maintainability.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 25,
      "question": "How does JavaScript handle concurrency?",
      "expected_answer": "JavaScript uses the event loop and async APIs like promises to manage concurrency.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 26,
      "question": "What is functional programming in JS?",
      "expected_answer": "Functional programming emphasizes pure functions, immutability, and composition.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 27,
      "question": "How does garbage collection work in JavaScript?",
      "expected_answer": "JavaScript automatically frees memory by removing unreachable objects.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 28,
      "question": "What are ES6 classes?",
      "expected_answer": "ES6 classes provide a cleaner syntax for object-oriented programming using prototypes.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 29,
      "question": "What is the difference between deep and shallow copy?",
      "expected_answer": "Shallow copies duplicate references, while deep copies recursively clone nested objects.",
      "category": "js",
      "difficulty": "Advanced"
    },
    {
      "id": 30,
      "question": "How do you optimize JavaScript performance?",
      "expected_answer": "Reduce DOM manipulation, use efficient loops, debounce inputs, and apply lazy loading.",
      "category": "js",
      "difficulty": "Advanced"
    }
  ]
}
